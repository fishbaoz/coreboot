/**
 * @file
 *
 * ALIB ASL library
 *
 *
 *
 * @xrefitem bom "File Content Label" "Release Content"
 * @e project:     AGESA
 * @e sub-project: GNB
 * @e \$Revision: 312288 $   @e \$Date: 2015-02-04 14:39:01 +0800 (Wed, 04 Feb 2015) $
 *
 */
/*
*****************************************************************************
*
* Copyright 2008 - 2015 ADVANCED MICRO DEVICES, INC.  All Rights Reserved.
*
* AMD is granting you permission to use this software (the Materials)
* pursuant to the terms and conditions of your Software License Agreement
* with AMD.  This header does *NOT* give you permission to use the Materials
* or any rights under AMD's intellectual property.  Your use of any portion
* of these Materials shall constitute your acceptance of those terms and
* conditions.  If you do not agree to the terms and conditions of the Software
* License Agreement, please do not use any portion of these Materials.
*
* CONFIDENTIALITY:  The Materials and all other information, identified as
* confidential and provided to you by AMD shall be kept confidential in
* accordance with the terms and conditions of the Software License Agreement.
*
* LIMITATION OF LIABILITY: THE MATERIALS AND ANY OTHER RELATED INFORMATION
* PROVIDED TO YOU BY AMD ARE PROVIDED "AS IS" WITHOUT ANY EXPRESS OR IMPLIED
* WARRANTY OF ANY KIND, INCLUDING BUT NOT LIMITED TO WARRANTIES OF
* MERCHANTABILITY, NONINFRINGEMENT, TITLE, FITNESS FOR ANY PARTICULAR PURPOSE,
* OR WARRANTIES ARISING FROM CONDUCT, COURSE OF DEALING, OR USAGE OF TRADE.
* IN NO EVENT SHALL AMD OR ITS LICENSORS BE LIABLE FOR ANY DAMAGES WHATSOEVER
* (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF PROFITS, BUSINESS
* INTERRUPTION, OR LOSS OF INFORMATION) ARISING OUT OF AMD'S NEGLIGENCE,
* GROSS NEGLIGENCE, THE USE OF OR INABILITY TO USE THE MATERIALS OR ANY OTHER
* RELATED INFORMATION PROVIDED TO YOU BY AMD, EVEN IF AMD HAS BEEN ADVISED OF
* THE POSSIBILITY OF SUCH DAMAGES.  BECAUSE SOME JURISDICTIONS PROHIBIT THE
* EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES,
* THE ABOVE LIMITATION MAY NOT APPLY TO YOU.
*
* AMD does not assume any responsibility for any errors which may appear in
* the Materials or any other related information provided to you by AMD, or
* result from use of the Materials or any related information.
*
* You agree that you will not reverse engineer or decompile the Materials.
*
* NO SUPPORT OBLIGATION: AMD is not obligated to furnish, support, or make any
* further information, software, technical information, know-how, or show-how
* available to you.  Additionally, AMD retains the right to modify the
* Materials at any time, without notice, and is not obligated to provide such
* modified Materials to you.
*
* U.S. GOVERNMENT RESTRICTED RIGHTS: The Materials are provided with
* "RESTRICTED RIGHTS." Use, duplication, or disclosure by the Government is
* subject to the restrictions as set forth in FAR 52.227-14 and
* DFAR252.227-7013, et seq., or its successor.  Use of the Materials by the
* Government constitutes acknowledgement of AMD's proprietary rights in them.
*
* EXPORT ASSURANCE:  You agree and certify that neither the Materials, nor any
* direct product thereof will be exported directly or indirectly, into any
* country prohibited by the United States Export Administration Act and the
* regulations thereunder, without the required authorization from the U.S.
* government nor will be used for any purpose prohibited by the same.
* ***************************************************************************
*
*/

  /*----------------------------------------------------------------------------------------*/
  /**
   *  Manage DPTCi
   *
   *
   *  Arg0 - buffer contains Power or thermal parameters
   */
  Method (procDPTCi, 1, Serialized) {
    CreateWordField (Arg0, 0, varSizeOfBuffer)    // Get total size of input buffer

    Store (Buffer (24) {}, Local7)                // Local7 as an input buffer and passed to procGnbSmuServiceReq
    CreateDWordField (Local7, 0,  varSmuArg0)
    CreateDWordField (Local7, 4,  varSmuArg1)
    CreateDWordField (Local7, 8,  varSmuArg2)
    CreateDWordField (Local7, 12, varSmuArg3)
    CreateDWordField (Local7, 16, varSmuArg4)
    CreateDWordField (Local7, 20, varSmuArg5)

    Store (2, Local0)                             // Use Local0 as buffer index
    while (LLess (Local0, varSizeOfBuffer)) {
      Store (DeRefOf (Index (Arg0, Local0)), Local1)
      Increment (Local0)
      Store (DeRefOf (Index (Arg0, Local0)), Local2)
      Increment (Local0)
      Or (ShiftLeft (DeRefOf (Index (Arg0, Local0)), 8), Local2, Local2)
      Increment (Local0)
      Or (ShiftLeft (DeRefOf (Index (Arg0, Local0)), 16), Local2, Local2)
      Increment (Local0)
      Or (ShiftLeft (DeRefOf (Index (Arg0, Local0)), 24), Local2, Local2)
      Increment (Local0)

      Store (0, varSmuArg0)
      Store (0, varSmuArg1)
      Store (0, varSmuArg2)
      Store (0, varSmuArg3)
      Store (0, varSmuArg4)
      Store (0, varSmuArg5)

      if (LEqual (Local1, 0)) {
        Store (Local2, varSmuArg0)
        procGnbSmuServiceReq (0x69, Local7)       // SMC_MSG_LoadCTdpParameters
      }
      if (LEqual (Local1, 1)) {
        Store (Local2, varSmuArg2)
        procGnbSmuServiceReq (0x6C, Local7)       // SMC_MSG_LoadStapmParameters
      }
      if (LEqual (Local1, 2)) {
        Store (Local2, varSmuArg0)
        procGnbSmuServiceReq (0x6C, Local7)       // SMC_MSG_LoadStapmParameters
      }
      if (LEqual (Local1, 3)) {
        Store (Local2, varSmuArg0)
        procGnbSmuServiceReq (0x7C, Local7)       // SMC_MSG_LoadTjMaxParameters
      }
    }
  }
